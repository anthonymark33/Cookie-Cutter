<?xml version="1.0"?>
<typesystem package="CutterBindings">
    <load-typesystem name="typesystem_core.xml" generate="no" />
    <load-typesystem name="typesystem_gui.xml" generate="no" />
    <load-typesystem name="typesystem_widgets.xml" generate="no" />

    <primitive-type name="bool"/>

    <object-type name="CutterCore">
    </object-type>
    <object-type name="Configuration" />
    <object-type name="MainWindow" >
        <enum-type name="MenuType" />
        <enum-type name="ContextMenuType" />
    </object-type>
    <object-type name="BasicBlockHighlighter" />
    <object-type name="AddressableItemContextMenu" />
    <object-type name="CutterDockWidget" />

    <template name="plugin_meta_get">
        SbkObject *wrapper = Shiboken::BindingManager::instance().retrieveWrapper(this);
        PyObject *classObject = PyObject_GetAttrString(reinterpret_cast&lt;PyObject *&gt;(wrapper), "__class__");
        if (!classObject) {
        PyErr_Print();
        return QString();
        }
        PyObject *pyResult = PyObject_GetAttrString(classObject, "VAR_NAME");
        if (!pyResult) {
        PyErr_Print();
        return QString();
        }
        PythonToCppFunc pythonToCpp = Shiboken::Conversions::isPythonToCppConvertible(SbkPySide2_QtCoreTypeConverters[SBK_QSTRING_IDX], pyResult);
        if (!pythonToCpp) {
        Shiboken::warning(PyExc_RuntimeWarning, 2, "Invalid return value for plugin metadata VAR_NAME, expected %s, got %s.", "QString", Py_TYPE(pyResult)->tp_name);
        return ::QString();
        }
        QString cppResult;
        pythonToCpp(pyResult, &amp;cppResult);
        return cppResult;
    </template>
    <object-type name="CutterPlugin">
        <modify-function signature="getName()const">
            <inject-code class="shell" position="beginning">
                <insert-template name="plugin_meta_get">
                    <replace from="VAR_NAME" to="name" />
                </insert-template>
            </inject-code>
        </modify-function>
        <modify-function signature="getAuthor()const">
            <inject-code class="shell" position="beginning">
                <insert-template name="plugin_meta_get">
                    <replace from="VAR_NAME" to="author" />
                </insert-template>
            </inject-code>
        </modify-function>
        <modify-function signature="getDescription()const">
            <inject-code class="shell" position="beginning">
                <insert-template name="plugin_meta_get">
                    <replace from="VAR_NAME" to="description" />
                </insert-template>
            </inject-code>
        </modify-function>
        <modify-function signature="getVersion()const">
            <inject-code class="shell" position="beginning">
                <insert-template name="plugin_meta_get">
                    <replace from="VAR_NAME" to="version" />
                </insert-template>
            </inject-code>
        </modify-function>
    </object-type>
</typesystem>
